server:
  port: 9090
  display-name: application
  context-path: /xjwrj
  session:
    timeout: 1800

spring:
  profiles:
    active: local
  mvc:
    favicon:
        enabled: false
##动态修改css js
  devtools:
    restart:
      enabled: false
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

##文件上传大小限制
  http:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB

#datasource
  datasource:
#    url: jdbc:mysql://192.168.10.211:3306/child?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
#    username: root
#    password: root
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
    initialSize: 10
    minIdle: 3
    maxActive: 20
# 配置获取连接等待超时的时间
    maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=10
# 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true


#mybatis
mybatis:
  mapper-locations: classpath:mapper/*Mapper.xml,mapper/*/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.winphone.child.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    #序列接口实现类配置
    #key-generator: com.baomidou.springboot.xxx
    #逻辑删除配置
    #logic-delete-value: 0
    #logic-not-delete-value: 1
    #自定义填充策略接口实现
    #meta-object-handler: com.baomidou.springboot.xxx
    #自定义SQL注入器
    #sql-injector: com.baomidou.springboot.xxx
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    callSettersOnNulls : true
  Properties:
    callSettersOnNulls : true

img:
    winLocation : C://upload//
    linuxLocation : /home/shgy_project/xjwrj/upload/

file:
  winLocation: C://upload//file
  linuxLocation: /home/shgy_project/xjwrj/upload/file/

swagger:
  enable: true

baolaiAPI:
  webServiceUrl: 'http://app.boorgeel.com:9911/openapiv3.asmx/'

---
##外网环境配置
spring:
  profiles: dev
  source:
    url: http://60.28.54.103:18080/xjwrj?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
    username: gwtjdl-wrj
    password: tjgs@2018$0683
ueditor:
  uploadIp: http://127.0.0.1:18080/xjwrj


---
##开发环境配置
spring:
  profiles: prod
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/xjwrj?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
    username: shgy
    password: $shgy2018@
ueditor:
  uploadIp: http://127.0.0.1:9090/xjwrj
##生产环境关闭swagger
swagger:
  enable: false

---
#本地环境配置
spring:
  profiles: local
  datasource:
    url: jdbc:mysql://localhost:3306/xjwrj?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: root
ueditor:
  uploadIp: http://127.0.0.1:9090/xjwrj

